"""Initial migration

Revision ID: d1f7e55dab2b
Revises:
Create Date: 2025-05-29 12:32:35.713899

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "d1f7e55dab2b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "client_configuration",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("client_id", sa.String(length=50), nullable=False),
        sa.Column("client_name", sa.String(length=250), nullable=True),
        sa.Column("kpi_theme", sa.String(length=50), nullable=True),
        sa.Column("report_section", sa.String(length=50), nullable=True),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("module_enabled_status", sa.Boolean(), nullable=False),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "client_id",
            "client_name",
            "kpi_theme",
            "report_section",
            "kpi_area",
            name="unique_client_configuration",
        ),
    )
    op.create_table(
        "company_profile",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("active_status", sa.String(), nullable=True),
        sa.Column("operation_type", sa.String(), nullable=True),
        sa.Column("legal_status", sa.String(), nullable=True),
        sa.Column("national_identifier", sa.String(), nullable=True),
        sa.Column("alias", sa.Text(), nullable=True),
        sa.Column("incorporation_date", sa.String(), nullable=True),
        sa.Column("shareholders", sa.Text(), nullable=True),
        sa.Column("revenue", sa.String(), nullable=True),
        sa.Column("subsidiaries", sa.String(), nullable=True),
        sa.Column("corporate_group", sa.String(), nullable=True),
        sa.Column("key_executives", sa.Text(), nullable=True),
        sa.Column("employee", sa.String(), nullable=True),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("ens_id", sa.String(length=50), nullable=False),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ens_id", "session_id", name="unique_ensid_session"),
    )
    op.create_table(
        "cyes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpicyes"
        ),
    )
    op.create_table(
        "ensid_screening_status",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("ens_id", sa.String(length=50), nullable=True),
        sa.Column(
            "overall_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "orbis_retrieval_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "screening_modules_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "report_generation_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", name="unique_ensid_session_ensid_screening_status"
        ),
    )
    op.create_table(
        "entity_universe",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=True),
        sa.Column("ens_id", sa.String(length=50), nullable=False),
        sa.Column("bvd_id", sa.String(length=50), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("name_international", sa.String(length=255), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("postcode", sa.String(length=20), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("phone_or_fax", sa.String(length=50), nullable=True),
        sa.Column("email_or_website", sa.String(length=100), nullable=True),
        sa.Column("national_id", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=100), nullable=True),
        sa.Column("address_type", sa.String(length=50), nullable=True),
        sa.Column("last_session_id", sa.String(length=50), nullable=True),
        sa.Column("overall_supplier_rating", sa.String(length=50), nullable=True),
        sa.Column(
            "thematic_rating", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("ens_id"),
    )
    op.create_table(
        "external_supplier_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "roe_using_net_income",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "event_adverse_media_other_crimes",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "event_adverse_media_reputational_risk",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("legal", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "solvency_ratio", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "roce_before_tax", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "roe_before_tax", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "profit_margin", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "shareholders_fund", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "total_assets", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("cash_flow", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "pl_before_tax", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "beneficial_owners_intermediatory",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "controlling_shareholders",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_event_sanctions",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_event_regulatory",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_event_bribery_fraud_corruption",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_event_pep", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "grid_event_adverse_media_other_crimes",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_event_adverse_media_reputational_risk",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("grid_legal", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("management", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("no_of_employee", sa.Integer(), nullable=True),
        sa.Column(
            "national_identifier_type",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "national_identifier",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("alias", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("incorporation_date", sa.Date(), nullable=True),
        sa.Column("num_subsidiaries", sa.Integer(), nullable=True),
        sa.Column("num_companies_in_corp_grp", sa.Integer(), nullable=True),
        sa.Column("num_direct_shareholders", sa.Integer(), nullable=True),
        sa.Column(
            "operating_revenue", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "profit_loss_after_tax",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("ebitda", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "current_ratio", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("pr_qualitative_score_date", sa.Date(), nullable=True),
        sa.Column("pr_more_risk_score_date", sa.Date(), nullable=True),
        sa.Column("pr_reactive_more_risk_score_date", sa.Date(), nullable=True),
        sa.Column("payment_risk_score", sa.Numeric(), nullable=True),
        sa.Column("esg_overall_rating", sa.Integer(), nullable=True),
        sa.Column("esg_environmental_rating", sa.Integer(), nullable=True),
        sa.Column("esg_social_rating", sa.Integer(), nullable=True),
        sa.Column("esg_governance_rating", sa.Integer(), nullable=True),
        sa.Column("esg_date", sa.Date(), nullable=True),
        sa.Column("cyber_risk_score", sa.Integer(), nullable=True),
        sa.Column("cyber_date", sa.Date(), nullable=True),
        sa.Column("implied_cyber_risk_score_date", sa.Date(), nullable=True),
        sa.Column(
            "beneficial_owners", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "global_ultimate_owner",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "shareholders", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "ultimately_owned_subsidiaries",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "other_ultimate_beneficiary",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "event_sanctions", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "event_regulatory", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "event_bribery_fraud_corruption",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("event_pep", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("country", sa.Text(), nullable=True),
        sa.Column("location", sa.Text(), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("is_active", sa.String(), nullable=True),
        sa.Column("operation_type", sa.String(), nullable=True),
        sa.Column("legal_form", sa.String(), nullable=True),
        sa.Column("bvd_id", sa.String(), nullable=True),
        sa.Column("pr_reactive_more_risk_score", sa.String(), nullable=True),
        sa.Column("cyber_botnet_infection", sa.String(), nullable=True),
        sa.Column("cyber_malware_servers", sa.String(), nullable=True),
        sa.Column("cyber_ssl_certificate", sa.String(), nullable=True),
        sa.Column("cyber_webpage_headers", sa.String(), nullable=True),
        sa.Column("website", sa.Text(), nullable=True),
        sa.Column("implied_cyber_risk_score", sa.Text(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=True),
        sa.Column(
            "controlling_shareholders_type",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("cyber_bonet_infection", sa.String(), nullable=True),
        sa.Column(
            "global_ultimate_owner_type",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("pr_qualitative_score", sa.String(), nullable=True),
        sa.Column("pr_more_risk_score", sa.String(), nullable=True),
        sa.Column(
            "pr_more_risk_score_ratio",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "pr_reactive_more_risk_score_ratio",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("long_and_short_term_debt", sa.Numeric(), nullable=True),
        sa.Column("long_term_debt", sa.Numeric(), nullable=True),
        sa.Column("total_shareholders_equity", sa.Numeric(), nullable=True),
        sa.Column(
            "default_events", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("orbis_news", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "operating_revenue_usd",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ens_id", "session_id", name="unique_ens_session"),
    )
    op.create_table(
        "fstb",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpifstb"
        ),
    )
    op.create_table(
        "grid_management",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("ens_id", sa.String(length=50), nullable=True),
        sa.Column("contact_id", sa.String(), nullable=True),
        sa.Column(
            "grid_adverse_media_other_crimes",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_adverse_media_reputational_risk",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "grid_sanctions", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "grid_regulatory", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "grid_bribery_fraud_corruption",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("grid_pep", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("grid_legal", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lgrk",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpilgrk"
        ),
    )
    op.create_table(
        "news",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpinews"
        ),
    )
    op.create_table(
        "news_master",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("link", sa.Text(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("title", sa.Text(), nullable=True),
        sa.Column("category", sa.Text(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("news_date", sa.Date(), nullable=True),
        sa.Column("sentiment", sa.String(), nullable=True),
        sa.Column("content_filtered", sa.Boolean(), nullable=True),
        sa.Column("country", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "link", "news_date", name="unique_name_link_date"),
    )
    op.create_table(
        "oval",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpioval"
        ),
    )
    op.create_table(
        "ovar",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpiovar"
        ),
    )
    op.create_table(
        "report_plot",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("ens_id", sa.String(length=50), nullable=True),
        sa.Column(
            "sentiment_aggregation",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rfct",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpirfct"
        ),
    )
    op.create_table(
        "sape",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpisape"
        ),
    )
    op.create_table(
        "session_configuration",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("client_id", sa.String(length=50), nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("module", sa.String(length=50), nullable=True),
        sa.Column("module_active_status", sa.Boolean(), nullable=False),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "session_id", "module", name="unique_session_configuration"
        ),
    )
    op.create_table(
        "session_screening_status",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column(
            "overall_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "list_upload_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "supplier_name_validation_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "screening_analysis_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("session_id", name="unique_sessionid_session"),
    )
    op.create_table(
        "sown",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.String(), nullable=False),
        sa.Column("kpi_code", sa.String(), nullable=False),
        sa.Column("kpi_flag", sa.Boolean(), nullable=False),
        sa.Column("kpi_value", sa.String(), nullable=True),
        sa.Column("kpi_details", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("kpi_rating", sa.String(), nullable=True),
        sa.Column("kpi_definition", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "kpi_code", name="unique_ensid_session_kpisown"
        ),
    )
    op.create_table(
        "summary",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("ens_id", sa.String(length=50), nullable=True),
        sa.Column("area", sa.String(length=50), nullable=False),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", "area", name="unique_ens_session_summary"
        ),
    )
    op.create_table(
        "supplier_master_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("name_international", sa.String(length=255), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("postcode", sa.String(length=20), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("phone_or_fax", sa.String(length=50), nullable=True),
        sa.Column("email_or_website", sa.String(length=100), nullable=True),
        sa.Column("national_id", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=100), nullable=True),
        sa.Column("ens_id", sa.String(length=50), nullable=True),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("bvd_id", sa.String(length=50), nullable=False),
        sa.Column(
            "validation_status",
            sa.Enum("VALIDATED", "NOT_VALIDATED", "PENDING", name="validationstatus"),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column(
            "report_generation_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'NOT_STARTED'"),
            nullable=False,
        ),
        sa.Column(
            "final_status",
            sa.Enum("ACCEPTED", "REJECTED", "PENDING", name="finalstatus"),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "ens_id", "session_id", name="supplier_master_ensid_session"
        ),
    )
    op.create_table(
        "token_monitor",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "usage_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("token_used", sa.Integer(), nullable=False),
        sa.Column("payload", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("openai_model", sa.Text(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_account",
        sa.Column("user_id", sa.Uuid(as_uuid=False), nullable=False),
        sa.Column("email", sa.String(length=256), nullable=False),
        sa.Column("hashed_password", sa.String(length=128), nullable=False),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_user_account_email"), "user_account", ["email"], unique=True
    )
    op.create_table(
        "users_table",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("otp", sa.String(), nullable=True),
        sa.Column("user_group", sa.String(), nullable=False),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", "user_id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(op.f("ix_users_table_email"), "users_table", ["email"], unique=True)
    op.create_index(op.f("ix_users_table_id"), "users_table", ["id"], unique=False)
    op.create_index(
        op.f("ix_users_table_username"), "users_table", ["username"], unique=True
    )
    op.create_table(
        "webhook_response",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("response", sa.String(length=50), nullable=False),
        sa.Column(
            "response_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", "response"),
    )
    op.create_table(
        "refresh_token",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("refresh_token", sa.String(length=512), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.Column("exp", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=True),
        sa.Column("user_group", sa.String(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users_table.user_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_refresh_token_refresh_token"),
        "refresh_token",
        ["refresh_token"],
        unique=True,
    )
    op.create_table(
        "upload_supplier_master_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("unmodified_name", sa.String(), nullable=True),
        sa.Column("unmodified_name_international", sa.String(), nullable=True),
        sa.Column("unmodified_address", sa.Text(), nullable=True),
        sa.Column("unmodified_postcode", sa.String(), nullable=True),
        sa.Column("unmodified_city", sa.String(), nullable=True),
        sa.Column("unmodified_country", sa.String(), nullable=True),
        sa.Column("unmodified_phone_or_fax", sa.String(), nullable=True),
        sa.Column("unmodified_email_or_website", sa.String(), nullable=True),
        sa.Column("unmodified_national_id", sa.String(), nullable=True),
        sa.Column("unmodified_state", sa.String(), nullable=True),
        sa.Column("unmodified_address_type", sa.String(), nullable=True),
        sa.Column("uploaded_name", sa.String(), nullable=True),
        sa.Column("uploaded_name_international", sa.String(), nullable=True),
        sa.Column("uploaded_address", sa.Text(), nullable=True),
        sa.Column("uploaded_postcode", sa.String(), nullable=True),
        sa.Column("uploaded_city", sa.String(), nullable=True),
        sa.Column("uploaded_country", sa.String(), nullable=True),
        sa.Column("uploaded_phone_or_fax", sa.String(), nullable=True),
        sa.Column("uploaded_email_or_website", sa.String(), nullable=True),
        sa.Column("uploaded_national_id", sa.String(), nullable=True),
        sa.Column("uploaded_state", sa.String(), nullable=True),
        sa.Column("uploaded_address_type", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("name_international", sa.String(), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("postcode", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("phone_or_fax", sa.String(), nullable=True),
        sa.Column("email_or_website", sa.String(), nullable=True),
        sa.Column("national_id", sa.String(), nullable=True),
        sa.Column("state", sa.String(), nullable=True),
        sa.Column("address_type", sa.String(), nullable=True),
        sa.Column("suggested_name", sa.String(), nullable=True),
        sa.Column("suggested_name_international", sa.String(), nullable=True),
        sa.Column("suggested_address", sa.Text(), nullable=True),
        sa.Column("suggested_postcode", sa.String(), nullable=True),
        sa.Column("suggested_city", sa.String(), nullable=True),
        sa.Column("suggested_country", sa.String(), nullable=True),
        sa.Column("suggested_phone_or_fax", sa.String(), nullable=True),
        sa.Column("suggested_email_or_website", sa.String(), nullable=True),
        sa.Column("suggested_national_id", sa.String(), nullable=True),
        sa.Column("suggested_state", sa.String(), nullable=True),
        sa.Column("suggested_address_type", sa.String(), nullable=True),
        sa.Column("ens_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("bvd_id", sa.String(), nullable=True),
        sa.Column(
            "validation_status",
            sa.Enum("VALIDATED", "NOT_VALIDATED", "PENDING", name="validationstatus"),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column(
            "final_status",
            sa.Enum("ACCEPTED", "REJECTED", "PENDING", name="finalstatus"),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column(
            "final_validation_status",
            sa.Enum(
                "VALIDATED",
                "NOT_VALIDATED",
                "NOT_REQUIRED",
                "PENDING",
                "FAILED",
                "AUTO_REJECT",
                "AUTO_ACCEPT",
                "REVIEW",
                name="finalvalidatedstatus",
            ),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column(
            "orbis_matched_status",
            sa.Enum("MATCH", "NO_MATCH", "PENDING", name="oribismatchstatus"),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column(
            "truesight_status",
            sa.Enum(
                "VALIDATED",
                "NOT_VALIDATED",
                "NOT_REQUIRED",
                "PENDING",
                "NO_MATCH",
                name="truesightstatus",
            ),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column("matched_percentage", sa.Integer(), nullable=False),
        sa.Column("truesight_percentage", sa.Integer(), nullable=False),
        sa.Column("suggested_bvd_id", sa.String(), nullable=True),
        sa.Column("pre_existing_bvdid", sa.Boolean(), nullable=False),
        sa.Column(
            "process_status",
            sa.Enum(
                "QUEUED",
                "NOT_STARTED",
                "STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "PENDING",
                name="status",
            ),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column("user_id", sa.String(), nullable=True),
        sa.Column("uploaded_external_vendor_id", sa.String(), nullable=True),
        sa.Column(
            "duplicate_in_session",
            sa.Enum("RETAIN", "REMOVE", "UNIQUE", name="dupinsession"),
            server_default=sa.text("'UNIQUE'"),
            nullable=False,
        ),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users_table.user_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "ens_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("upload_supplier_master_data")
    op.drop_index(op.f("ix_refresh_token_refresh_token"), table_name="refresh_token")
    op.drop_table("refresh_token")
    op.drop_table("webhook_response")
    op.drop_index(op.f("ix_users_table_username"), table_name="users_table")
    op.drop_index(op.f("ix_users_table_id"), table_name="users_table")
    op.drop_index(op.f("ix_users_table_email"), table_name="users_table")
    op.drop_table("users_table")
    op.drop_index(op.f("ix_user_account_email"), table_name="user_account")
    op.drop_table("user_account")
    op.drop_table("token_monitor")
    op.drop_table("supplier_master_data")
    op.drop_table("summary")
    op.drop_table("sown")
    op.drop_table("session_screening_status")
    op.drop_table("session_configuration")
    op.drop_table("sape")
    op.drop_table("rfct")
    op.drop_table("report_plot")
    op.drop_table("ovar")
    op.drop_table("oval")
    op.drop_table("news_master")
    op.drop_table("news")
    op.drop_table("lgrk")
    op.drop_table("grid_management")
    op.drop_table("fstb")
    op.drop_table("external_supplier_data")
    op.drop_table("entity_universe")
    op.drop_table("ensid_screening_status")
    op.drop_table("cyes")
    op.drop_table("company_profile")
    op.drop_table("client_configuration")
    # ### end Alembic commands ###
